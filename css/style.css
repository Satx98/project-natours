/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Basic Reset ======================================================================= */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

/* HEADER ============================================================================== */
.header {
    height: 95vh;
    background: linear-gradient(
                to right bottom,
                rgb(126, 213, 111, 0.8),
                rgb(40, 180, 133, 0.8)
            )
            no-repeat,
        #7ed56f url(../img/hero.jpg) no-repeat top;
    background-size: cover;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden;  /* a hack to disbale the background shaking */
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation-delay: 3s;
       animation-iteration-count: 3;
       */
}

/*  In 8. Creating Cool CSS Animations-
    *for animation to work only two properties are needed -
    *animation-name: ...;
    *animation-duration: ...;
    *animation-delay: ...;
    *animation-iteration-count: ...;
    *animation-timing-function: ...;*/

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}

/*  In 8. Creating Cool CSS Animations-
    *CSS Shorthand:-
    *animation: [name] [duration] [timing-function];*/

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    
    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/*  In 8. Creating Cool CSS Animations-
    *It is best to only use two properties in animations (@keyframes [animation-name]
{...}. One of them is opacity & another is transform because these two are best
understood by browsers for animations!! 
    *Also learned how to use the 'transform: translate(...);' 
    *X-direction (in CSS) is calculated from left to right direction (+ive direction)
    *Y-direction (in CSS) is calculated from top to bottom direction (+ive direction)
    *Also learned how to use the 'transform: rotate(...deg);'
    *Multiple values for transform: translate(...) rotate(...) ...;*/
